services:
  backend:
    build: .
    command: [ "uvicorn", "main:app", "--host", "0.0.0.0", "--port", "82", "--reload" ]
    ports:
      - "8002:82"
    volumes:
      - .:/app
    environment:
      - PYTHONUNBUFFERED=1
      - KAFKA_BROKERS=kafka:9092
      - CELERY_BROKER_URL=kafka://kafka:9092

  nginx:
    image: nginx:latest
    ports:
      - "82:82"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/conf.d/default.conf
    depends_on:
      - backend

  mongodb:
    image: mongo:latest
    ports:
      - "27017:27017"
    environment:
      - MONGO_INITDB_ROOT_USERNAME=${DB_USER}
      - MONGO_INITDB_ROOT_PASSWORD=${DB_PASSWORD}
      - MONGO_INITDB_DATABASE=${DB_NAME}
    volumes:
      - mongodb_data:/data/db

  zookeeper:
    image: bitnami/zookeeper:3.8.0
    ports:
      - "2181:2181"
    volumes:
      - zookeeper_data:/bitnami/zookeeper/data
    environment:
      - ALLOW_ANONYMOUS_LOGIN=yes
    restart: always

  kafka:
    image: bitnami/kafka:3.3.1
    ports:
      - "9092:9092"
    volumes:
      - kafka_data:/bitnami/kafka/data
    environment:
      - KAFKA_CFG_BROKER_ID=1
      - KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP=PLAINTEXT:PLAINTEXT
      - KAFKA_CFG_ADVERTISED_LISTENERS=PLAINTEXT://kafka:9092
      - KAFKA_CFG_LISTENERS=PLAINTEXT://0.0.0.0:9092
      - KAFKA_CFG_ZOOKEEPER_CONNECT=zookeeper:2181
      - KAFKA_CLUSTER_ID=your-custom-cluster-id
      - KAFKA_CFG_AUTO_CREATE_TOPICS_ENABLE=true
      - KAFKA_LOG4J_LOGGING_LEVEL=DEBUG
      - ALLOW_PLAINTEXT_LISTENER=yes
      - KAFKA_ZOOKEEPER_PROTOCOL=PLAINTEXT
    depends_on:
      - zookeeper
    restart: always


  celery:
    build: .
    command: celery -A app worker -l info
    environment:
      - CELERY_BROKER_URL=kafka://kafka:9092
    depends_on:
      - kafka
      - backend


volumes:
  mongodb_data:
  kafka_data:
  zookeeper_data: